[tool.poetry]
name = "www"
version = "0.1.0"
description = ""
authors = ["Niten Nashiki <n.nashiki.work@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
azure-functions = "^1.10.1"
pydantic = "^1.9.0"
az-evgrid-pydantic-schema = "^0.2.0"
azure-functions-durable = "^1.1.6"
fastapi = "^0.95.1"

[tool.poetry.group.dev.dependencies]
pytest = "^5.2"
isort = "^5.10.1"
black = "^22.3.0"
taskipy = "^1.10.1"
flake8 = "^5.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"

[tool.taskipy.variables]
python_src_dir = "azfunc eventfunc tests"
flake_ignore = "E501,E203,W503,W504"

[tool.taskipy.tasks]
# poetry run task <task_name>
fmt = { cmd = "task black && task isort && task flake8", help = "format code" }
fmt_check = { cmd = "task black_check && task isort_check && task flake8", help = "format code with check option" }
test = "pytest . -s"
black = { cmd = "black {python_src_dir}", use_vars = true }
black_check = { cmd = "black {python_src_dir} --check", use_vars = true }
isort = { cmd = "isort {python_src_dir}", use_vars = true }
isort_check = { cmd = "isort {python_src_dir} --check-only", use_vars = true }
flake8 = { cmd = "flake8 --ignore {flake_ignore} {python_src_dir}", use_vars = true }
deploy = { cmd = "func azure functionapp publish <app-name>", help = "deploy to azure" }
pre_deploy = "poetry export -f requirements.txt --output requirements.txt"
run_local = "func start"
